- figure out why Loaded event is treated specially
- support multiple operations in operation converter
- remove Additional.Operations and add setter for Attached.Operations
- types and enums that can be resolved at compile time should be
- show call-stack within code tree
- add switch/case to scripting
- allow context to be set from scripting
- eliminate PropertyInitializerNode
- consider how to call extension methods
- test designer errors, e.g. syntax error in script
-----------------------
- test kaxaml with markup programming
- Parse number dot identifier as an integer
- Add support for dynamic objects in path expressions
- write converter sample
- add Attached event to all components
- auto-increment version number
- detect handler re-registration
- refactor recursive descent parser for operators
- consider removing Type completely
- review how to handle For type
- change For: Operator plus Limit and Increment defaults to 1
- revisit conversion, specifically we should not silently allow conversions to fail
-----------------------
- fix accidental auto-evaluation of langauge elements
- clean up ResourceConverter names, especially LoadActions, etc.
- convert Type arguments to type or expression
-----------------------
- provide special handling for context across function calls
- add types to function parameters, and report them at call time
- add way to apply Call to a collection
- consider styles and collections
- handle detaching
- add MarkupMultiConverter
- add timer
- add RoutedEventTrigger
- use to intentionally avoid documentation: /// <internalonly />
- support multiple indexers in paths
-----------------------
- ToString with details for a composite object doesn't refresh its binding properly
- delay evaluation of MarkupObject properties until parent inheritance context is set
- figure out why MarkupObjectExtension cannot be first item in Resources
- figure out why ExpressionCollection cannot be cast to an IEnumerable<IExpression>
